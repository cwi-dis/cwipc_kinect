stages:
  - build
  - test
  - deploy

build_linux:
  stage: build
  tags:
    - ubuntu1804
  except: 
  - /latest/
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
# Install and update debian packages
    - apt-get update
    - apt-get install -y tzdata
    - apt-get install -y software-properties-common
    - apt-get install -y git
    - apt-get install -y cmake
    - apt-get install -y libpcl-dev libpcl-common1.8 libpcl-io1.8
    - apt-get install -y libusb-1.0 libusb-dev
    - apt-get install -y libglfw3 libglfw3-dev
# Install realsense2 from its private list of repos
#    - apt-key adv --keyserver keys.gnupg.net --recv-key C8B3A55A6F3EFCDE || apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C8B3A55A6F3EFCDE
#    - add-apt-repository -y "deb http://realsense-hw-public.s3.amazonaws.com/Debian/apt-repo bionic main" -u
#    - apt-get install -y librealsense2-dkms
#    - apt-get install -y librealsense2-utils
#    - apt-get install -y librealsense2-dev
# Install Deployment repo and dependencies
    - apt-get install -y python3-pip
    - mkdir deployment-helpers
    - cd deployment-helpers
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@baltig.viaccess-orca.com:8443/VRT/deployment-group/Deployment
    - python3 -m pip install -r Deployment/scripts/requirements.txt
    - cd ..
# Get and install cwipc_util
    - if [ "$CI_COMMIT_TAG" = "" ]; then REL_CWIPC_UTIL="--release_name latest"; else REL_CWIPC_UTIL="--release_name $CI_COMMIT_TAG"; fi
    - echo Getting cwipc_util $REL_CWIPC_UTIL
    - python3 deployment-helpers/Deployment/scripts/getReleaseFromGitLab --cicd --project_name cwipc_util $REL_CWIPC_UTIL
    - tar --directory /usr/local -xvf cwipc_util_ubuntu1804_*.tgz
  script:
    - mkdir -p build
    - mkdir -p dist-ubuntu1804
    - cd build
    - cmake ..
    - make
    - make test ARGS=--output-on-failure
    - make install DESTDIR=../dist-ubuntu1804
    - cd ..
    - tar --directory dist-ubuntu1804/usr/local -cvaf cwipc_kinect_ubuntu1804_$CI_BUILD_TAG.tgz .
  artifacts:
    paths:
      - cwipc_kinect_ubuntu1804_$CI_BUILD_TAG.tgz
      
build_osx:
  stage: build
  tags:
  - osx1014
  except: 
  - /latest/
  before_script:
    - brew install pkg-config || true # brew upgrade pkg-config
    - brew install cmake || true # brew upgrade cmake
    - brew install pcl || true # brew upgrade pcl
    - brew install homebrew/core/glfw3 || true # brew upgrade homebrew/core/glfw3
    - brew install librealsense || true # brew upgrade librealsense
# Install Deployment repo and dependencies
    - python3 -m pip install pillow numpy open3d
    - mkdir deployment-helpers
    - cd deployment-helpers
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@baltig.viaccess-orca.com:8443/VRT/deployment-group/Deployment
    - python3 -m pip install -r Deployment/scripts/requirements.txt
    - cd ..
# Get and install cwipc_util
    - if [ "$CI_COMMIT_TAG" = "" ]; then REL_CWIPC_UTIL="--release_name latest"; else REL_CWIPC_UTIL="--release_name $CI_COMMIT_TAG"; fi
    - python3 deployment-helpers/Deployment/scripts/getReleaseFromGitLab --cicd --project_name cwipc_util $REL_CWIPC_UTIL
    - tar --directory /usr/local -xvmf cwipc_util_osx1014_*.tgz
  script:
    - mkdir -p build
    - mkdir -p dist-osx1014
    - cd build
    - cmake ..
    - make
    - make test ARGS=--output-on-failure
    - make install DESTDIR=../dist-osx1014
    - cd ..
    - tar --directory dist-osx1014/usr/local -z -cvf cwipc_kinect_osx1014_$CI_BUILD_TAG.tgz .
  artifacts:
    paths:
      - cwipc_kinect_osx1014_$CI_BUILD_TAG.tgz
      
build_win:
  stage: build
  tags:
    - win10
  except: 
  - /latest/
  before_script:
    - rm -rf /cygdrive/c/dist-win/installed
    - mkdir -p /cygdrive/c/dist-win/installed
# Install Deployment repo and dependencies
    - python -m pip install pillow numpy open3d
    - mkdir deployment-helpers
    - cd deployment-helpers
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@baltig.viaccess-orca.com:8443/VRT/deployment-group/Deployment
    - python -m pip install -r Deployment/scripts/requirements.txt
    - cd ..
# Get and install cwipc_util
    - if [ "$CI_COMMIT_TAG" = "" ]; then REL_CWIPC_UTIL="--release_name latest"; else REL_CWIPC_UTIL="--release_name $CI_COMMIT_TAG"; fi
    - python deployment-helpers/Deployment/scripts/getReleaseFromGitLab --cicd --project_name cwipc_util $REL_CWIPC_UTIL
    - (zipfile=$PWD/cwipc_util_win1064_*.zip && cd /cygdrive/c/dist-win && unzip $zipfile)
  script:
    - mkdir -p build
    - export ziplocation=$(pwd)/cwipc_kinect_win1064_$CI_BUILD_TAG.zip
    - export CTEST_OUTPUT_ON_FAILURE=1
    - cd build
    - cmake .. -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX="C:/dist-win/installed"
    - cmake --build . --config Release
    - cmake --build . --config Release --target RUN_TESTS
    - find /cygdrive/c/dist-win -type f -print > previously-installed.txt
    - cmake --build . --config Release --target INSTALL
    - rm `cat previously-installed.txt`
    - (cd /cygdrive/c/dist-win && zip -r $ziplocation installed)
  artifacts:
    paths:
      - cwipc_kinect_win1064_$CI_BUILD_TAG.zip

deploy_all:
  stage: deploy
  tags:
    - linux
  only: 
    - tags
  except: 
  - /latest/
  dependencies: 
    - build_linux
    - build_osx
    - build_win
  before_script:
  - apt-get update
  - apt-get install -y python3-pip
  - mkdir deployment-helpers
  - cd deployment-helpers
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@baltig.viaccess-orca.com:8443/VRT/deployment-group/Deployment
  - python3 -m pip install -r Deployment/scripts/requirements.txt
  - cd ..
  script:
    - mkdir deliverables
    - mv cwipc_kinect_ubuntu1804_$CI_BUILD_TAG.tgz cwipc_kinect_osx1014_$CI_BUILD_TAG.tgz cwipc_kinect_win1064_$CI_BUILD_TAG.zip deliverables
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --notag cwipc_kinect_ubuntu1804_$CI_BUILD_TAG.tgz cwipc_kinect_osx1014_$CI_BUILD_TAG.tgz cwipc_kinect_win1064_$CI_BUILD_TAG.zip
  

deploy_all_untagged:
  stage: deploy
  tags:
    - linux
  except: 
    - tags
    - /latest/
  dependencies: 
    - build_linux
    - build_osx
    - build_win
  before_script:
  - apt-get update
  - apt-get install -y python3-pip
  - mkdir deployment-helpers
  - cd deployment-helpers
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@baltig.viaccess-orca.com:8443/VRT/deployment-group/Deployment
  - python3 -m pip install -r Deployment/scripts/requirements.txt
  - cd ..
  script:
    - mkdir deliverables
    - mv cwipc_kinect_ubuntu1804_$CI_BUILD_TAG.tgz cwipc_kinect_osx1014_$CI_BUILD_TAG.tgz cwipc_kinect_win1064_$CI_BUILD_TAG.zip deliverables
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --deleterelease || true
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --deletetag || true
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --branch_to_tag "$CI_COMMIT_REF_NAME" cwipc_kinect_ubuntu1804_$CI_BUILD_TAG.tgz cwipc_kinect_osx1014_$CI_BUILD_TAG.tgz cwipc_kinect_win1064_$CI_BUILD_TAG.zip
  
